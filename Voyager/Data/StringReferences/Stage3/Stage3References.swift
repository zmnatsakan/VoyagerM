//
//  Stage3References.swift
//  Voyager
//
//  Created by admin on 28.11.2023.
//

import Foundation

struct Stage3PreviewReference: PhraseDelegate {
    static let shared = Stage3PreviewReference()
    private init() {}
    
    private let text0 = PhraseData(
        text: "Ты старался, хранил единственный смокинг, чистил его от пыли, разглаживал складки. Но и шерстить улицы ты тоже помнил, так что всё шло своим чередом, и копейка рубль сберегла.",
        type: .common
    )
    
    private let text1 = PhraseData(
        text: "Просыпаться в тихой комнате с тараканами, низкими потолками, кривыми плинтусами и рваной мебелью не так плохо, когда снизу никто не орёт, сверху никто не бегает, а по сторонам обитатели не празднуют день шофёра ночи напролёт. Тебе удалось вырваться из очень плохих условий в просто плохие, так что рисковал последними средствами ты вовсе не зря.",
        type: .common
    )
    
    private let text2 = PhraseData(
        text: "В полдень ты решил пойти на улицу, чтобы осмотреться и выработать новый маршрут для проверки мест, где можно во что-то сыграть. Ты захлопнул за собой дверь и проверил, взял ли ключи, как твоего плеча коснулась маленькая ладонь.",
        type: .common
    )
    
    private let text3 = PhraseData(
        text: "- Здравствуйте, это всё-таки вы. Я не думала, что ещё смогу вас увидеть после того, как я перестала посещать встречи.",
        type: .exSectarian
    )
    
    private let text4 = PhraseData(
        text: "- Извините, не могу вас припомнить…",
        type: .mc
    )
    
    private let text5 = PhraseData(
        text: "- Меня зовут Светлана, я ходила в ваш… кружок, если можно так его назвать, в ваше общество. Было интересно и очень полезно для меня, я всё учила и не пропускала ни одного занятия. Просто, когда объявили об общем проекте, у меня изменились жизненные обстоятельства, эту ношу я потянуть не могла. В тот момент, во всяком случае. Но теперь мне получше, дела у меня налаживаются. Я вот думаю, а можно ещё к вам попасть?",
        type: .exSectarian
    )
    
    private let text6 = PhraseData(
        text: "Тут ты понимаешь, что Светлане известно о твоём прошлом куда больше, чем тебе самому или твоим документам, так что нужно получить как можно больше сведений, не спугнув забытую знакомую, а то мало ли как она отреагирует на твой нынешний образ жизни.",
        type: .common
    )
    
    private let text7 = PhraseData(
        text: "- Не уверен, но полагаю, что при особом рвении всё получится. Каким образом вы хотели бы проявить участие?",
        type: .mc
    )
    
    private let text8 = PhraseData(
        text: "- Я запомнила то, что вы тогда рассказывали о воли космоса на всё сущее, и что обстоятельства просто так не складываются, нужно видеть шанс на спасение в каждом событии. Может быть, я всё это произошло неспроста, и я сегодня вас повстречала именно в момент готовности к участию? Может, именно теперь я смогу со всем справиться?",
        type: .exSectarian
    )
    
    private let text9 = PhraseData(
        text: "-…",
        type: .mc
    )
    
    private let text10 = PhraseData(
        text: "- У меня есть достаточно свободных денег, чтобы сделать средний вклад один раз. Я помню, что вы не даёте никаких расписок и документов, чтобы весь процесс был неофициальным, без потерь на уплатах налогов. Да, всё на доверии только. Мы сейчас можем условиться по поводу даты и места передачи денег, здесь я была у знакомой, в остальное время я живу в другой части города. Так что, встретимся?",
        type: .exSectarian,
        answerPositive: "Да, конечно, я готов принять взносы, сделать это ещё пока можно.",
        answerNegative: "Извините, всё изменилось. Если вы так верите в шансы и совпадения, то, похоже, что прямо сейчас вас “бог отводит”. Я не занят более тем, с чем был связан, и у меня много проблем, но решать их нужно своими усилиями, а не чужими деньгами. Извините ещё раз, ничем не могу помочь. Всего доброго.",
        hasAnswers: true
    )
    
    var phrases: [PhraseData] {
        return [text0, text1, text2, text3, text4, text5, text6, text7, text8, text9, text10]
    }
}

struct Stage3HippodromeReference: PhraseDelegate {
    static let shared = Stage3HippodromeReference()
    private init() {}
    
    private let text0 = PhraseData(
        text: "Твои ставки на спорт были более-менее удачными, так что возникало желание сделать следующий шаг, шаг навстречу тёмным делам. Как известно, сам себя не похвалишь – никто не похвалит. А ещё смелость города берёт. В общем, ты решил напомнить о себе эксперту по футбольным соревнованиям, и отправился в бар.",
        type: .common
    )
    
    private let text1 = PhraseData(
        text: "- …ну так вот, ты представляешь, они все цепочкой заворачивают за край поля, бегут такие, будто бы прилипли друг к другу, тут слетает подкова у одного из первых, и понеслось… Один, за ним второй, за ним другой… Смешались вместе кони-люди, короче, почти все попадали, попереломались. Так что теперь на ипподроме нашем всё строго, камер навешали, всё проверяют, все теперь одинаково готовыми идут на забеги.",
        type: .bartender
    )
    
    private let text2 = PhraseData(
        text: "- Ну, я понял. Так а я здесь причём?",
        type: .sportsman
    )
    
    private let text3 = PhraseData(
        text: "- Ну ты на спорт же не хочешь ставить - вот тебе дело чистое, где всё ровно. Во всяком случае, на данный момент.",
        type: .bartender
    )
    
    private let text4 = PhraseData(
        text: "Это был диалог спортсмена и бармена, который ты слушал, как и в прошлый раз, сидя в сторонке. Суть была ясна – вот ещё один способ сыграть на случайности или везении.",
        type: .common
    )
    
    private let text5 = PhraseData(
        text: "Что касается тёмных дел, то спортсмен ничего не сказал, только коротко кивнул, уходя из-за стойки.",
        type: .common
    )
    
    var phrases: [PhraseData] {
        return [text0, text1, text2, text3, text4, text5]
    }
}

struct Stage3TwentyOneReference: PhraseDelegate {
    static let shared = Stage3TwentyOneReference()
    private init() {}
    
    private let text0 = PhraseData(
        text: "Костюм готов после химчистки, ну а это значит, что пришла пора вновь испытывать удачу и поднимать город.",
        type: .common
    )
    
    private let text1 = PhraseData(
        text: "Ты сказал это знакомому по играм в казино напарнику, но, внезапно, он не сильно обрадовался.",
        type: .common
    )
    
    private let text2 = PhraseData(
        text: "- Не всё оно так здорово, там ребята что-то подозревают, у них в бесконтрольный период повышаются траты из-за ребят вроде нас, или же из-за случайных выигрышей кого-то ещё. Короче, нужно временно переключиться на что-то. Кстати, у нас есть маленькое казино в пристрое к загородному барделю. Там ты можешь поиграть в карты, если будешь выглядеть как любитель ночных бабочек, который заскочил рискнуть пару раз просто из интереса. Сам я туда не суюсь, мало ли что, это же очевидно крышует кто-то из бандюков или полицаев, неизвестно, чем может там дело закончиться.",
        type: .casinoPartner
    )
    
    private let text3 = PhraseData(
        text: "- Так а можно где-то ещё сыграть в карты, в 21, например?",
        type: .mc
    )
    
    private let text4 = PhraseData(
        text: "- Сейчас нет, в казино то мы не суёмся. Если ты проплатишь себе подругу на вечер, то с игрой в карты проблем не должно быть, всё будет выглядеть убедительно. Отправляйся, развеешься, может, выиграешь,  мне расскажешь потом.",
        type: .casinoPartner
    )
    
    var phrases: [PhraseData] {
        return [text0, text1, text2, text3, text4]
    }
}

struct Stage3BetComplicatedReference: PhraseDelegate {
    static let shared = Stage3BetComplicatedReference()
    private init() {}
    
    private let text0 = PhraseData(
        text: "Ты решил рискнуть, и карта в руку шла. Но, внезапно, ты увидел среди суровых посетителей заведения своего знакомого спортсмена из бара.",
        type: .common
    )
    
    private let text1 = PhraseData(
        text: "- Вот те на. Ты откуда явился здесь?",
        type: .investMan
    )
    
    private let text2 = PhraseData(
        text: "- Шёл по улице, замёрз и решил зайти погреться.",
        type: .mc
    )
    
    private let text3 = PhraseData(
        text: "- А по-моему ты за мною таскаешься, аферист. Ты всё хочешь что ли в торговлю инсайдами? И решил стать настырным? Иди вон покажи себя сперва на ставках, где нужно подробно указывать счёт за игру. Это тебе не просто победа или поражение, тут нужно уметь владеть сведениями из открытых источников. Всю инфу ты либо отыщешь самостоятельно, либо, значит, это всё просто не для тебя. Там и выигрыши побольше.",
        type: .investMan
    )
    
    private let text4 = PhraseData(
        text: "- Так и долго мне ставить, на самом то деле?",
        type: .mc
    )
    
    private let text5 = PhraseData(
        text: "- Сколько потребуется. Так а если ты сам выигрываешь, для чего тебе все эти мутки вокруг футбола? Того и гляди, начнёшь сам поднимать, так откроешь капперское бюро, э-хе-хе…",
        type: .investMan
    )
    
    private let text6 = PhraseData(
        text: "- Я тебя вполне понял, может быть, попробую ставить.",
        type: .mc
    )
    
    private let text7 = PhraseData(
        text: "Так и порешали. Стало ясно, что потребуется посетить интернет-кафе, или же купить телефон с 4G и настроить ленту новостей из мира спорта.",
        type: .common
    )
    
    var phrases: [PhraseData] {
        return [text0, text1, text2, text3, text4, text5, text6, text7]
    }
}

struct Stage3WheelComplicatedReference: PhraseDelegate {
    static let shared = Stage3WheelComplicatedReference()
    private init() {}
    
    private let text0 = PhraseData(
        text: "Интернет оказался хорошим вложением – теперь можно было быть на связи с ребятами, которые во что-то играли. Друзья подкидывали контакты друзей, а это обеспечивало больше выигрышных конов. Общаться приходилось, понятное дело, кратко и замысловато, просто скидывая маячки друг другу о встречах; а то мало ли, кто читает сегодня твои переписки - докопается майор, или ещё какой чёрт.",
        type: .common
    )
    
    private let text1 = PhraseData(
        text: "Так всё шло неспешно - плавно, как вдруг замаячил напарник по игральным домам.",
        type: .common
    )
    
    private let text2 = PhraseData(
        text: "- Дела не важные, я скажу тебе.",
        type: .casinoPartner
    )
    
    private let text3 = PhraseData(
        text: "- То есть ещё хуже, чем были? Мы и так не играем вообще, а ведь давеча мы выиграли всего раз.",
        type: .mc
    )
    
    private let text4 = PhraseData(
        text: "- Да, мы выиграли разок всего, но достаточно, а теперь они усложнили тему.",
        type: .casinoPartner
    )
    
    private let text5 = PhraseData(
        text: "- Как конкретно?",
        type: .mc
    )
    
    private let text6 = PhraseData(
        text: "- Сама игра теперь стала сложнее, у них больше способов смухлевать, а простым ребятам сложно выиграть даже тогда, когда нет мухлежа.",
        type: .casinoPartner
    )
    
    private let text7 = PhraseData(
        text: "- Что же делать?",
        type: .mc
    )
    
    private let text8 = PhraseData(
        text: "- Я скорректировал свою схему, чтобы вычислять часы честной игры, открытого шанса. Просто ныне будет нужно больше стараться ради победы, а самих побед станет меньше. Да и ставки по размеру теперь побольше. Да и выигрыши больше, но кого это волнует при таких то условиях…",
        type: .casinoPartner
    )
    
    private let text9 = PhraseData(
        text: "- Ничего, я попробую, у меня другие варианты заработка уже на пределе.",
        type: .mc
    )
    
    private let text10 = PhraseData(
        text: "- Может получиться. Другие напарники, с которыми я что-то делал, посливались, когда это узнали. Может быть, ты придёшься в момент, когда казино уже захочет дать выиграть кому-то.",
        type: .casinoPartner
    )
    
    private let text11 = PhraseData(
        text: "- Что ж, увидим.",
        type: .mc
    )
    
    var phrases: [PhraseData] {
        return [text0, text1, text2, text3, text4, text5, text6, text7, text8, text9, text10, text11]
    }
}
